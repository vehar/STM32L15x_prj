/*
 *	File:	GPIO.h
 *	Date:	14.12.2011
 *	Denis Zheleznjakov http://ziblog.ru
 */

#ifndef MCU_GPIO_H_
#define MCU_GPIO_H_

#define MODE_OUTPUT_PUSH_PULL					MODE_OUTPUT_PUSH_PULL
#define MODE_OUTPUT_PUSH_PULL_PULL_UP			MODE_OUTPUT_PUSH_PULL_PULL_UP
#define MODE_OUTPUT_PUSH_PULL_PULL_DOWN			MODE_OUTPUT_PUSH_PULL_PULL_DOWN
#define MODE_OUTPUT_OPEN_DRAIN					MODE_OUTPUT_OPEN_DRAIN
#define MODE_OUTPUT_OPEN_DRAIN_PULL_UP			MODE_OUTPUT_OPEN_DRAIN_PULL_UP
#define MODE_OUTPUT_OPEN_DRAIN_PULL_DOWN		MODE_OUTPUT_OPEN_DRAIN_PULL_DOWN

#define MODE_AF_PUSH_PULL						MODE_AF_PUSH_PULL
#define MODE_AF_PUSH_PULL_PULL_UP				MODE_AF_PUSH_PULL_PULL_UP
#define MODE_AF_PUSH_PULL_PULL_DOWN				MODE_AF_PUSH_PULL_PULL_DOWN
#define MODE_AF_OPEN_DRAIN						MODE_AF_OPEN_DRAIN
#define MODE_AF_OPEN_DRAIN_PULL_UP				MODE_AF_OPEN_DRAIN_PULL_UP
#define MODE_AF_OPEN_DRAIN_PULL_DOWN			MODE_AF_OPEN_DRAIN_PULL_DOWN

#define MODE_INPUT_FLOATING						MODE_INPUT_FLOATING
#define MODE_INPUT_PULL_UP						MODE_INPUT_PULL_UP
#define MODE_INPUT_PULL_DOWN					MODE_INPUT_PULL_DOWN

#define MODE_ANALOG								MODE_ANALOG

#define SPEED_400KHZ							SPEED_400KHZ
#define SPEED_2MHZ								SPEED_2MHZ
#define SPEED_10MHZ								SPEED_10MHZ
#define SPEED_40MHZ								SPEED_40MHZ

#define AF_NO									0UL
#define AF0										0UL
#define AF1										1UL
#define AF2										2UL
#define AF3										3UL
#define AF4										4UL
#define AF5										5UL
#define AF6										6UL
#define AF7										7UL
#define AF8										8UL
#define AF9										9UL
#define AF10									10UL
#define AF11									11UL
#define AF12									12UL
#define AF13									13UL
#define AF14									14UL
#define AF15									15UL

//------------------------------------------------------------------------------
#define GPIO_PIN_MODE_INPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->MODER &= ~(3UL << (PIN * 2UL)); }
#define GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->MODER &= ~(3UL << (PIN * 2UL)); \
		  GPIO##PORT->MODER |= (1UL << (PIN * 2UL)); }
#define GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->MODER &= ~(3UL << (PIN * 2UL)); \
		  GPIO##PORT->MODER |= (2UL << (PIN * 2UL)); }
#define GPIO_PIN_MODE_ANALOG(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->MODER |= (3UL << (PIN * 2UL)); }

//------------------------------------------------------------------------------
#define GPIO_PIN_SPEED_400KHZ(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->OSPEEDR &= ~(3UL << (PIN * 2UL)); }
#define GPIO_PIN_SPEED_2MHZ(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->OSPEEDR &= ~(3UL << (PIN * 2UL)); \
		  GPIO##PORT->OSPEEDR |= (1UL << (PIN * 2UL)); }
#define GPIO_PIN_SPEED_10MHZ(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->OSPEEDR &= ~(3UL << (PIN * 2UL)); \
		  GPIO##PORT->OSPEEDR |= (2UL << (PIN * 2UL)); }
#define GPIO_PIN_SPEED_40MHZ(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->OSPEEDR |= (3UL << (PIN * 2UL)); }

//------------------------------------------------------------------------------
#define GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->OTYPER &= ~(1UL << (PIN)); }
#define GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->OTYPER |= (1UL << (PIN)); }

//------------------------------------------------------------------------------
#define GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->PUPDR &= ~(3UL << (PIN * 2UL)); }
#define GPIO_PIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->PUPDR &= ~(3UL << (PIN * 2UL)); \
		  GPIO##PORT->PUPDR |= (1UL << (PIN * 2UL)); }
#define GPIO_PIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ GPIO##PORT->PUPDR &= ~(3UL << (PIN * 2UL)); \
		  GPIO##PORT->PUPDR |= (2UL << (PIN * 2UL)); }

//------------------------------------------------------------------------------
#define GPIO_PIN0_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 0); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 0); }
#define GPIO_PIN1_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 4); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 4); }
#define GPIO_PIN2_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 8); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 8); }
#define GPIO_PIN3_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 12); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 12); }
#define GPIO_PIN4_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 16); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 16); }
#define GPIO_PIN5_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 20); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 20); }
#define GPIO_PIN6_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 24); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 24); }
#define GPIO_PIN7_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[0] &= ~(15UL << 28); \
			  GPIO##PORT->AFR[0] |= ((ALTERNATE) << 28); }
#define GPIO_PIN8_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 0); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 0); }
#define GPIO_PIN9_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 4); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 4); }
#define GPIO_PIN10_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 8); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 8); }
#define GPIO_PIN11_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 12); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 12); }
#define GPIO_PIN12_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 16); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 16); }
#define GPIO_PIN13_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 20); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 20); }
#define GPIO_PIN14_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 24); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 24); }
#define GPIO_PIN15_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->AFR[1] &= ~(15UL << 28); \
			  GPIO##PORT->AFR[1] |= ((ALTERNATE) << 28); }

//------------------------------------------------------------------------------
#define GPIO_CONFIGURATION_MODE_OUTPUT_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_OUTPUT_PUSH_PULL_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_OUTPUT_PUSH_PULL_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}

//------------------------------------------------------------------------------
#define GPIO_CONFIGURATION_MODE_OUTPUT_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_OUTPUT_OPEN_DRAIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_OUTPUT_OPEN_DRAIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_OUTPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}

//------------------------------------------------------------------------------
#define GPIO_CONFIGURATION_MODE_AF_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN##PIN##_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_AF_PUSH_PULL_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN##PIN##_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_AF_PUSH_PULL_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PUSH_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN##PIN##_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}

//------------------------------------------------------------------------------
#define GPIO_CONFIGURATION_MODE_AF_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN##PIN##_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_AF_OPEN_DRAIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN##PIN##_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_AF_OPEN_DRAIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ALTERNATE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_OPEN_DRAIN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN_##SPEED(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		 	GPIO_PIN##PIN##_AF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}

//------------------------------------------------------------------------------
#define GPIO_CONFIGURATION_MODE_INPUT_FLOATING(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_INPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_INPUT_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_INPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_UP(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}
#define GPIO_CONFIGURATION_MODE_INPUT_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_INPUT(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_PULL_DOWN(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}

//------------------------------------------------------------------------------
#define GPIO_CONFIGURATION_MODE_ANALOG(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		{ \
			GPIO_PIN_MODE_ANALOG(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
			GPIO_PIN_NO_PULL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); \
		}

//-----------------------------------------------------------------------------
#define GPIO_PIN_CONFIGURATION(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO_CONFIGURATION_##MODE(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE); }

//-----------------------------------------------------------------------------
#define GPIO_PIN_ON_HIGH(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->BSRRL |= (1UL << PIN); }

#define GPIO_PIN_ON_LOW(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->BSRRH |= (1UL << PIN); }

#define GPIO_PIN_OFF_HIGH(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->BSRRH |= (1UL << PIN); }

#define GPIO_PIN_OFF_LOW(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO##PORT->BSRRL |= (1UL << PIN); }

//-----------------------------------------------------------------------------
#define GPIO_PIN_ON(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO_PIN_ON_##LEVEL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) }

#define GPIO_PIN_OFF(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			{ GPIO_PIN_OFF_##LEVEL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) }

//-----------------------------------------------------------------------------
#define GPIO_PIN_SIGNAL_HIGH(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			( (GPIO##PORT->IDR & (1UL << PIN)) == (1UL << PIN) )

#define GPIO_PIN_SIGNAL_LOW(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
		( (GPIO##PORT->IDR & (1UL << PIN)) != (1UL << PIN) )

#define GPIO_PIN_SIGNAL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) \
			( GPIO_PIN_SIGNAL_##LEVEL(PORT, PIN, LEVEL, MODE, SPEED, ALTERNATE) )

//-----------------------------------------------------------------------------
#define PIN_CONFIGURATION(PIN_DESCRIPTION) GPIO_PIN_CONFIGURATION(PIN_DESCRIPTION)
#define PIN_ON(PIN_DESCRIPTION) GPIO_PIN_ON(PIN_DESCRIPTION)
#define PIN_OFF(PIN_DESCRIPTION) GPIO_PIN_OFF(PIN_DESCRIPTION)
#define PIN_SIGNAL(PIN_DESCRIPTION) GPIO_PIN_SIGNAL(PIN_DESCRIPTION)

#endif /* MCU_GPIO_H_ */
